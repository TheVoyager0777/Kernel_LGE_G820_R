#!/sbin/sh
# TWRP A/B Installer Backend
# by osm0sis, Dees_Troy and topjohnwu

OUTFD=/proc/self/fd/$2;
ZIPFILE="$3";

ui_print() { $BOOTMODE && echo "$1" || echo -e "ui_print $1\nui_print" >> $OUTFD; }
abort() { ui_print "$1"; exit 1; }

# detect Magisk Manager/booted flashing
ps | grep zygote | grep -v grep >/dev/null && BOOTMODE=true || BOOTMODE=false;
$BOOTMODE || ps -A 2>/dev/null | grep zygote | grep -v grep >/dev/null && BOOTMODE=true;

ui_print "######################################";
ui_print "#          Dragon kernel A11         #";
ui_print "#               LG G8                #";
ui_print "#             by AnhTran             #";
ui_print "######################################";
ui_print " ";

# /dev/tmp is safe for both booted and recovery installs
tmp=/dev/tmp/stbkernel;
# target partition without the slot suffix
target=/dev/block/bootdevice/by-name/boot;
targetdtbo=/dev/block/bootdevice/by-name/dtbo_a;

ui_print "Unpacking the installer...";
ui_print " ";
rm -rf $tmp;
mkdir -p $tmp;
unzip -o "$ZIPFILE" -d $tmp || abort "Failed to extract zip!";

cd $tmp;
tool=$tmp/magiskboot;

imagedtb=$tmp/Image.gz-dtb;

chmod 755 $tool;

for slot in a b; do
  ui_print "Running boot image patcher on slot $slot...";
  slot=_$slot;
  dd bs=1048576 if=$target$slot of=boot.img;
  $tool unpack -n boot.img;
  
  # Remove kernel and dtb
  rm -f kernel dtb;
  
  # patching Image.dtb
  $tool split $imagedtb;
  mv kernel_dtb dtb;
  $tool dtb dtb patch;

  # patching boot.img
  $tool hexpatch ./kernel 736B69705F696E697472616D667300 77616E745F696E697472616D667300;
  
  # repack boot.img
  $tool repack boot.img;
  cat new-boot.img /dev/zero > $target$slot 2>/dev/null || true;

  $tool cleanup;
  rm -f new-boot.img;
done;

ui_print " ";
ui_print "Boot image patching complete!";

cd /;
rm -rf /dev/tmp;

ui_print " ";
ui_print "Done flashing kernel!";
ui_print "Now you can reboot to system";
